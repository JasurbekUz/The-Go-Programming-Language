
///********************UZBEK CONTENT**************************************//
Ma'lumot turlari

go da ma'lumotlarning 4 xil turlari bor
	
	1. basic: sonlar, satrlar va mantiqiy turlarni oz ichiga iladi
	2. agregat: toplamlar va struct larni oz ichiga oladi
	3. Reference: slice lar, pointer lar, funksiya lar va kanallar
	4. interface: interface

//*********************ENGLISH CONTENT***************************************//
		Data Types

In Go, there are four types of data:

	» » Basic: Examples include: numbers, strings, and Booleans.
	» » Aggregate: Examples include arrays and structs.
	» » Reference: Examples include pointers, slices, functions, and channels.
	» » Interface: An interface is a collection of method signatures.
	
Basic types
	
		bool
		string

	Numeric types:

		uint - either 32 or 64 bits
		int  - same size as uint
		uintptr - an unsigned integer large enough to store the a pointer value
		
		uint8 - the set of all unsigned 8-bit integers (0 to 255)
		uint16 - the set of all unsigned 16-bit integers (0 to 65535)
		uint32 - the set of all unsigned 32-bit integers (0 to 4294967295)
		uint64 - the set of all unsigned 64-bit integers (0 to 18446744073709551615)

		int8 - the set of all signed 8-bit integers (-128 to 127)
		int16 - the set of all signed 16-bit integers (-32768 to 32767)
		int64 - the set of all signed 64-bit integers (-9223372036854775808 to 9223372036854775807)

		float32 - the set of all IEEE-754 32-bit floating-point numbers
		float64 - the set of all IEEE-754 64-bit floating-point numbers

		complex64 - the set of all complex numbers with float32 real and imaginary parts
		complex128 - the set of all complex numbers with float64 real and imaginary parts

		byte - alias for uint8
		rune - alias for int32 (represents a Unicode code point)

	//**********************UZBEK CONTENT********************************//
	//**********************UZBEK CONTENT********************************//
	//**********************UZBEK CONTENT********************************//

	go da harqanday elon qilingan identifier data taype hisoblanadi.
	hattoki 'int64' va 'int32' kabilarham boshqa-boshqa data typlar hisoblanadi. Yani biz
	bir-xil bo'lmagan data typlar orasida ammalr bajara olmaymiz

	int64 va int32 kabi boshqa-boshqa type lar ustida qandaydir amallar bajarishga to'g'ri kelib qolsa
	type_conversion dan foydalanamiz:

	ex:
		var number1 int32 = 12
		var number2 int64 = 24

		number3 := int(number1) + int(number2) vahokazo


	*go da harqanday elon qilingan identifier data taype hisoblanadi.
	yani biz elon qilgan function lar ham, struct larham ularning signaturelari yoki fieldlari ga qarab turli-typlar hisoblanadi!

	ex: func(int)int {} va func(float32) int {} kabilar alohoda typelar hisonlanadi
